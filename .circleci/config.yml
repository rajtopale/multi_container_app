version: 2.1

orbs:
  shellcheck: circleci/shellcheck@2.2.4
  aws-cli: circleci/aws-cli@2.0

jobs:
  build:
    environment:
      CLIENT_IMAGE_NAME: registry.gitlab.com/rajtopale/docker_registry/multi-client
      NGINX_IMAGE_NAME: registry.gitlab.com/rajtopale/docker_registry/multi-nginx
      SERVER_IMAGE_NAME: registry.gitlab.com/rajtopale/docker_registry/multi-server
      WORKER_IMAGE_NAME: registry.gitlab.com/rajtopale/docker_registry/multi-worker
      BUCKET_NAME: elasticbeanstalk-us-east-1-544475008658
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - run:
          name: Compute version number
          command: echo "0.1.${CIRCLE_BUILD_NUM}" | tee version.txt
      - setup_remote_docker:
          version: 20.10.6
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t $CLIENT_IMAGE_NAME:$TAG ./client
          docker build -t $NGINX_IMAGE_NAME:$TAG ./nginx
          docker build -t $SERVER_IMAGE_NAME:$TAG ./server
          docker build -t $WORKER_IMAGE_NAME:$TAG ./worker
          echo $DOCKER_PASS | docker login registry.gitlab.com -u $DOCKER_USER --password-stdin
          docker push $CLIENT_IMAGE_NAME:$TAG
          docker push $NGINX_IMAGE_NAME:$TAG
          docker push $SERVER_IMAGE_NAME:$TAG
          docker push $WORKER_IMAGE_NAME:$TAG
      - persist_to_workspace:
          root: .
          paths:
            - .
  eb-deploy:
    environment:
      CLIENT_IMAGE_NAME: registry.gitlab.com/rajtopale/docker_registry/multi-client
      NGINX_IMAGE_NAME: registry.gitlab.com/rajtopale/docker_registry/multi-nginx
      SERVER_IMAGE_NAME: registry.gitlab.com/rajtopale/docker_registry/multi-server
      WORKER_IMAGE_NAME: registry.gitlab.com/rajtopale/docker_registry/multi-worker
      BUCKET_NAME: elasticbeanstalk-us-east-1-544475008658
    docker:
      - image: cimg/base:2021.07
    steps:
      - attach_workspace:
          at: .
      - aws-cli/setup
      - run: |
          TAG=$(<version.txt)
          mkdir eb_bucket
          cat \<<EOF > eb_bucket/dockercfg
          {
            "auths": {
              "https://registry.gitlab.com": {
                "auth": "$DOCKER_AUTH"
              }
            }
          }
          EOF
          cat \<<EOF > eb_bucket/$TAG-Dockerrun.aws.json 
          {
            "AWSEBDockerrunVersion": 2,
            "Authentication": {
              "bucket": "$BUCKET_NAME",
              "key": "docker-react/dockercfg"
            },
            "containerDefinitions": [
              {
                "name": "client",
                "image": "$CLIENT_IMAGE_NAME:$TAG",
                "hostname": "client",
                "essential": false
              },
              {
                "name": "api-server",
                "image": "$SERVER_IMAGE_NAME:$TAG",
                "hostname": "api-server",
                "essential": false
              },
              {
                "name": "worker",
                "image": "$WORKER_IMAGE_NAME:$TAG",
                "hostname": "worker",
                "essential": false
              },
              {
                "name": "nginx-proxy",
                "image": "$NGINX_IMAGE_NAME:$TAG",
                "essential": true,
                "portMappings": [
                  {
                    "hostPort": 80,
                    "containerPort": 80
                  }
                ],
                "links": [
                  "client",
                  "server"
                ]
              }
            ]
          }
          EOF
          aws s3 cp eb_bucket/ s3://$BUCKET_NAME/docker-react --recursive
          aws elasticbeanstalk create-application-version --application-name docker-react --version-label docker-react-$TAG --source-bundle S3Bucket=$BUCKET_NAME,S3Key=docker-react/$TAG-Dockerrun.aws.json
          aws elasticbeanstalk update-environment --environment-name Dockerreact-env --version-label docker-react-$TAG 


workflows:
  version: 2
  elastic-beanstalk-workflow:
    jobs:
      - shellcheck/check
      - build:
          requires:
            - shellcheck/check
          filters:
            branches:
              only:
                - master
      - eb-deploy:
          context: AWS
          requires:
            - build
          



